// Good Code: Using blocks for asynchronous operations and error handling

#import <Foundation/Foundation.h>

@interface MyNetworkManager : NSObject

- (void)fetchDataWithCompletion:(void (^)(NSData *data, NSError *error))completion;

@end

@implementation MyNetworkManager

- (void)fetchDataWithCompletion:(void (^)(NSData *data, NSError *error))completion {
    dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
        // Simulate network request
        sleep(2); 
        NSError *error = nil;
        NSData *data = [@"Network data" dataUsingEncoding:NSUTF8StringEncoding];
        
        //Simulate an error condition.
        if (arc4random_uniform(2) == 0) {
            error = [NSError errorWithDomain:@"MyNetworkErrorDomain" code:1001 userInfo:@{NSLocalizedDescriptionKey: @"Network request failed"}];
            data = nil;
        }

        dispatch_async(dispatch_get_main_queue(), ^{
            completion(data, error);
        });
    });
}

@end

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        MyNetworkManager *manager = [[MyNetworkManager alloc] init];
        [manager fetchDataWithCompletion:^(NSData *data, NSError *error) {
            if (error) {
                NSLog(@"Error: %@", error);
            } else {
                NSString *string = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
                NSLog(@"Data: %@", string);
            }
        }];
        
        [[NSRunLoop currentRunLoop] run]; //Keep the program running until the completion block is executed.
    }
    return 0;
}


// Bad Code:  Ignoring error handling and using deprecated methods

#import <Foundation/Foundation.h>

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        NSURL *url = [NSURL URLWithString:@"http://example.com"];
        NSURLRequest *request = [NSURLRequest requestWithURL:url];
        NSData *data = [NSURLConnection sendSynchronousRequest:request returningResponse:nil error:nil]; //Ignoring error
        NSString *string = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];
        NSLog(@"%@",string);
    }
    return 0;
}
